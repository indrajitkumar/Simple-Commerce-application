name: Android CI

on:
  workflow_dispatch:
  push:
    branches:
      - '**'

  #Set your workflow to run every day of the week at 16:00 UTC(9:30 PM)
  schedule:
    - cron:  0 16 * * 0-6

jobs:
  Build:

    runs-on: [self-hosted, android]

    steps:
      - uses: actions/checkout@v2.3.3
        with:
          fetch-depth: 0
          clean: true
          submodules: true
          lfs: true

      - name: Set env
        run: |
          echo "EPOCH_TIME=$(date +%s)" >> $GITHUB_ENV
          echo $EPOCH_TIME

      - name: Build & Test with Gradle
        shell: bash
        run: |
          echo 'Running build'
          ./gradlew --refresh-dependencies --full-stacktrace clean assembleRelease \
           :app:testReleaseUnitTest

      #publish to artifactory only if the branch is either 'master' or 'develop' or 'release/platform_*'
      #    - name: Publish To Artifactory
      #      if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/develop') || startsWith(github.ref, 'refs/heads/release/platform_')
      #      shell: bash
      #      env:
      #        USERNAME: ${{ secrets.FUNCTIONAL_ACCOUNT_CODE1_ID }}
      #        PASSWORD: ${{ secrets.ARTIFACTORY_API_KEY }}
      #      run: |
      #          ./gradlew --full-stacktrace saveResDep saveAllResolvedDependenciesGradleFormat zipDocuments artifactoryPublish :referenceApp:printArtifactoryApkPath :AppInfra:zipcClogs :securedblibrary:zipcClogs :pim:zipcClogs :conversationalChatBot:zipcClogs :postpurchase-care-sdk:zipcClogs :productselection:zipcClogs :digitalCareUApp:zipcClogs :digitalCare:zipcClogs :pimApp:zipcClogs
      #          apkname=`xargs < apkname.txt`
      #          dependenciesName=${apkname/.apk/.gradledependencies.gz}
      #          ./gradlew -Dorg.gradle.parallel=false reportAllProjectDependencies | gzip -9 > ./allProjects.gradledependencies.gz
      #          curl -L -u $USERNAME:$PASSWORD -X PUT "${dependenciesName}" -T ./allProjects.gradledependencies.gz
      #
      - name: Upload APK's
        if: startsWith(github.ref, 'refs/heads/release/platform_')
        uses: actions/upload-artifact@v3.1.0
        with:
          name: APK's
          path: |
            ${{github.workspace}}/app/build/outputs/apk/release/*.apk

      - name: Upload Dependencies.lock file
        if: startsWith(github.ref, 'refs/heads/release/platform_')
        uses: actions/upload-artifact@v3.1.0
        with:
          name: dependencies.lock
          path: |
            ${{github.workspace}}/app/*dependencies*.lock

      #    - name: Jacoco Reports
      #      shell: bash
      #      run: |
      #           ./gradlew test
      #           ./gradlew jacocoTestReport

      - name: Lint
        shell: bash
        run: |
          ./gradlew  \
           :app:lint

  App-Center:
    if: startsWith(github.ref, 'refs/heads/release/platform_')
    needs: Build
    runs-on: [self-hosted, linux]
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.6
        with:
          name: APK's
          path: '${{github.workspace}}/APK'

      - name: List Artifacts
        run: |
          pwd
          ls ${{github.workspace}}
          ls ${{github.workspace}}/APK/*
          ls ${{github.workspace}}/APK/app/build/outputs/apk/release/

      - name: App Center Deploy
        uses: wzieba/AppCenter-Github-Action@v1.3.3
        with:
          appName: EMS-Team/mobile-plf-android
          token: ${{secrets.APP_CENTER_TOKEN}}
          # Distribution group
          group: UDI
          # Artefact to upload (.apk)
          file: APK/app/build/outputs/apk/release/app-release.apk
          # If true, send an email notification to the distribution group
          notifyTesters: true
          debug: true
  No newline at end of file
